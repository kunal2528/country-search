{"ast":null,"code":"var _jsxFileName = \"/Users/kunal/Documents/frontend assignment/frontend-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect } from 'react';\nimport { setItems } from './redux/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchBar from './components/SearchBar';\nimport ItemList from './components/ItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    paginatedItems\n  } = useSelector(state => state.items);\n  useEffect(() => {\n    // Fetch the data from the API\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://valid.layercode.workers.dev/list/countries?format=select&flags=true&value=code');\n        const data = await response.json();\n        dispatch(setItems(data.countries)); // Update Redux store with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching countries:\", error);\n      }\n    };\n    fetchCountries();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Country Code list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"076OYbS/ju+7FVxTgMCT6wLDfpM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","setItems","useDispatch","useSelector","SearchBar","ItemList","jsxDEV","_jsxDEV","App","_s","dispatch","paginatedItems","state","items","fetchCountries","response","fetch","data","json","countries","error","console","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","_c","$RefreshReg$"],"sources":["/Users/kunal/Documents/frontend assignment/frontend-assignment/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect } from 'react';\nimport { setItems } from './redux/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchBar from './components/SearchBar';\nimport ItemList from './components/ItemList';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { paginatedItems } = useSelector((state) => state.items);\n\n  useEffect(() => {\n    // Fetch the data from the API\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('https://valid.layercode.workers.dev/list/countries?format=select&flags=true&value=code');\n        const data = await response.json();\n        dispatch(setItems(data.countries)); // Update Redux store with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching countries:\", error);\n      }\n    };\n\n    fetchCountries();\n  }, [dispatch]);\n  \n  return (\n    <div className=\"App\">\n      <h1 style={{textAlign: 'center'}}>Country Code list</h1>\n      <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <SearchBar />\n        <ItemList />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAe,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAE9Db,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wFAAwF,CAAC;QACtH,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,QAAQ,CAACT,QAAQ,CAACgB,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAIiB,KAAK,EAAE;QAACC,SAAS,EAAE;MAAQ,CAAE;MAAAF,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDtB,OAAA;MAAKiB,KAAK,EAAE;QAACM,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAQ,CAAE;MAAAT,QAAA,gBAC3EhB,OAAA,CAACH,SAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbtB,OAAA,CAACF,QAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA5BQD,GAAG;EAAA,QACON,WAAW,EACDC,WAAW;AAAA;AAAA8B,EAAA,GAF/BzB,GAAG;AA4BX;AAED,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}